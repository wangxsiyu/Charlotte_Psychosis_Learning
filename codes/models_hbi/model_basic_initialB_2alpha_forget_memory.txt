model{
			for (c in 1:nCondition){
					noise_k[c] ~ dexp(0.01);
					noise_lambda[c] ~ dexp(10);
					noise[c] <- noise_k[c]/noise_lambda[c];
					alpha_n[c] ~ dnorm(0,0.01);
					alpha_p[c] ~ dexp(0.01);
					alphal_n[c] ~ dnorm(0,0.01);
					alphal_p[c] ~ dexp(0.01);
					bias_n[c] ~ dnorm(0,0.01);
					bias_p[c] ~ dexp(0.01);
					b0[c] ~ dnorm(0,0.01);
					fr[c] ~ dunif(0,1);
					mem[c] ~ dunif(0,1);
					for (s in 1:nSubject) {
							noise_sub[c,s] ~ dgamma(noise_k[c], noise_lambda[c]);
							alpha_sub[c,s] ~ dnorm(alpha_n[c], 1/alpha_p[c]);
							alphal_sub[c,s] ~ dnorm(alphal_n[c], 1/alphal_p[c]);
							bias_sub[c,s] ~ dnorm(bias_n[c], 1/bias_p[c]);
					}
			}
			Qinit[1,1]<- -b0[blocktype[1]]/2;
			Qinit[1,2]<- b0[blocktype[1]]/2;
			Qinit[2,1]<- -b0[blocktype[2]]/2;
			Qinit[2,2]<- b0[blocktype[2]]/2;
			for (s in 1:nSessions){
					mr[s] = step(lastsession[s]) * mem[blocktype[s]]
					Q[s, 1, 1] <- mr[s] * Qinit[s, 1] - (1-mr[s]) * b0[blocktype[s]]/2;
					Q[s, 2, 1] <- mr[s] * Qinit[s, 2] + (1-mr[s]) * b0[blocktype[s]]/2;
				  for (t in 1:nTrial){
							dQ[s, t] <- Q[s, 2, t] - Q[s, 1, t];
							P[s, t]  <- 1/(1 + exp(-(dQ[s,t] + bias_sub[blocktype[s], subID[s]])/noise_sub[blocktype[s], subID[s]]));
							choice[s, t] ~ dbern( P[s,t] );
							RPE[s, t] <- equals(c[s, t], 1) * (r[s, t] - Q[s, 1, t]) + equals(c[s, t], 2) * (r[s, t] - Q[s, 2, t]);
							alpha[s, t] <- step(RPE[s,t]) * alpha_sub[blocktype[s], subID[s]] + step(-RPE[s,t]) * alphal_sub[blocktype[s], subID[s]]
							Q[s, 1, t+1] <- fr[blocktype[s]] * Q[s, 1, t] + equals(c[s,t], 1) * alpha[s,t] * RPE[s,t];
							Q[s, 2, t+1] <- fr[blocktype[s]] * Q[s, 2, t] + equals(c[s,t], 2) * alpha[s,t] * RPE[s,t];
					}
					Qinit[s+2, 1] = Q[s, 1, nTrial + 1];
					Qinit[s+2, 2] = Q[s, 2, nTrial + 1];
			}
}
